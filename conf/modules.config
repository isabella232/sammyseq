/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: TRIMMOMATIC {
        publishDir = [
            enabled: false
        ]
	ext.args2 = 'ILLUMINACLIP:TruSeq3-PE.fa:2:30:10:2:True LEADING:3 TRAILING:3 MINLEN:36'
    }


    //
    // Alignment options
    //
    withName: 'BWA_MEM' {
        ext.args = ""
        publishDir = [
            path: { "${params.outdir}/bwa" },
            enabled: false,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            pattern: "*.bam"
        ]
    }

    withName: 'SAMTOOLS_INDEX_BAM' {
        ext.args = ""
        publishDir = [
            path: { "${params.outdir}/bwa" },
            enabled: true,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            pattern: "*.bai"
        ]
    }

    withName: 'SAMTOOLS_SORT_BAM' {
        ext.args = ""
        ext.prefix = { "${meta.id}.sorted" }
        publishDir = [
            path: { "${params.outdir}/bwa" },
            enabled: true,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            pattern: "*sorted.bam"
        ]
    }

    //
    // Picard MarkDuplicates and Filtering options
    //

    withName: '.*BAM_MARKDUPLICATES_PICARD:PICARD_MARKDUPLICATES' {
        ext.args   = '--ASSUME_SORTED true --REMOVE_DUPLICATES true --VALIDATION_STRINGENCY LENIENT --TMP_DIR tmp'
        ext.prefix = { "${meta.id}.md" }
        publishDir = [
            [
                path: { "${params.outdir}/reports/markduplicates" },
                mode: params.publish_dir_mode,
                pattern: '*metrics.txt',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ],
            [
                path: { "${params.outdir}/markduplicates/bam" },
                mode: params.publish_dir_mode,
                pattern: '*.md.{bam,bai}',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                //enable: params.save_markduplicates_bam
            ]
        ]
    }

    withName: '.*BAM_MARKDUPLICATES_PICARD:SAMTOOLS_INDEX' {
        ext.prefix  = { "${meta.id}.markdup.sorted" }
        publishDir  = [
            path: { "${params.outdir}/markduplicates/bam" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            pattern: '*.{bai,csi}'
        ]
    }

    withName: '.*BAM_MARKDUPLICATES_PICARD:BAM_STATS_SAMTOOLS.*' {
        ext.args    = ""
        publishDir  = [
            path: { "${params.outdir}/reports/samtools_stats/${meta.id}/md/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            pattern: '*.{stats,flagstat,idxstats}'
        ]
    }

    withName: 'SAMTOOLS_VIEW_FILTER' {
        ext.args = '-h -F 0x0400'
        publishDir  = [
            path: { "${params.outdir}/markduplicates/duplicates_removed" },
            mode: params.publish_dir_mode,
            pattern: '*filtered.{bai,bam}',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
        ext.prefix  = { "${meta.id}.md.filtered" }
    }

    withName: 'SAMTOOLS_SORT_FILTERED' {
        ext.args    = ""
        ext.prefix  = { "${meta.id}.md.filtered.sorted" }
        publishDir  = [
            path: { "${params.outdir}/markduplicates/duplicates_removed" },
            mode: params.publish_dir_mode,
            pattern: '*filtered.sorted.bam',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }

    withName: 'SAMTOOLS_INDEX_FILTERED' {
        ext.args    = ""
        ext.prefix  = { "${meta.id}.md.filtered.sorted" }
        publishDir  = [
            path: { "${params.outdir}/markduplicates/duplicates_removed" },
            mode: params.publish_dir_mode,
            pattern: '*filtered.sorted.bai',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }



}
